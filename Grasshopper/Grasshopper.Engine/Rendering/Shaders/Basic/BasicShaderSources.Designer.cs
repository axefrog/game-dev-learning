//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Grasshopper.Engine.Rendering.Shaders.Basic {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class BasicShaderSources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BasicShaderSources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Grasshopper.Engine.Rendering.Shaders.Basic.BasicShaderSources", typeof(BasicShaderSources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cbuffer PerFrame : register(b0)
        ///{
        ///	float3 cameraPosition;
        ///};
        ///
        ///struct VertexShaderInput
        ///{
        ///	float4 position  : SV_Position;
        ///	float3 normal    : NORMAL;
        ///	float4 color     : COLOR;
        ///	matrix wvproj    : WVPROJ;
        ///	matrix world     : WORLD;
        ///	matrix winvtrans : WINVTRANS;
        ///};
        ///
        ///struct PixelShaderInput
        ///{
        ///	float4 position      : SV_Position;
        ///	float4 diffuse       : COLOR;
        ///	float3 worldNormal   : NORMAL;
        ///	float3 worldPosition : WORLDPOS;
        ///};.
        /// </summary>
        internal static string Common {
            get {
                return ResourceManager.GetString("Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;Common&quot;
        ///
        ///float4 PSMain(PixelShaderInput pixel) : SV_Target
        ///{
        ///	return pixel.diffuse;
        ///}.
        /// </summary>
        internal static string DefaultPixelShader {
            get {
                return ResourceManager.GetString("DefaultPixelShader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;Common&quot;
        ///
        ///PixelShaderInput VSMain(VertexShaderInput vertex)
        ///{
        ///    PixelShaderInput result = (PixelShaderInput)0;
        ///
        ///    // Change the position vector to be 4 units for matrix transformation
        ///    vertex.position.w = 1.0;
        ///	result.position = mul(vertex.position, vertex.instance);
        ///	result.position = mul(result.position, worldViewProjection);
        ///    result.diffuse = vertex.color;
        ///    
        ///    // We use the inverse transpose of the world so that if there is non uniform
        ///    // scaling the normal is tra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DefaultVertexShader {
            get {
                return ResourceManager.GetString("DefaultVertexShader", resourceCulture);
            }
        }
    }
}
